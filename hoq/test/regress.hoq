#
#  Synopsis:
#	Trivial regression test
#  Usage:
#	export LANG=C
#	PATH=.:$PATH
#	seq 1000 | ../src/hoq regress.hoq | sort | shasum
#	cat regress.sha1
#

command echo_bool("regress-echo");

command echo_line("regress-echo");

command echo_dollar1("regress-echo");

command echo_10("regress-echo", "echo 10");
command echo_100("regress-echo", "echo 100");
command echo_line_exit("regress-echo", "echo line exit status");

command xtrue("true");

exec xtrue()
  when
	# both are always true
	(
		true != false
		or
		true == true
		or
		false == false
		or
		false != true
	)
	and
	not (
		#  always false
		true == false
		and
		true != true
		and
		false != false
		and
		false == true
	)
	and
	true
	and
	not false
;

exec echo_bool(
	"true == true", true == true,

	"true == false", true == false,

	"false == true", false == true,

	"false == false", false == false,

	"true != true", true != true,

	"true != false", true != false,

	"false != true", false != true,

	"false != false", false != false,

	"0 == 0", 0 == 0,
	"0 != 0", 0 != 0,

	"1 == 1", 1 == 1,
	"1 != 1", 1 != 1,

	"0 == 255", 0 == 255,
	"0 != 255", 0 != 255,

	"xtrue.exit_status == 255", xtrue.exit_status == 255,
	"xtrue.exit_status != 255", xtrue.exit_status != 255,

	"xtrue.exit_status == 0", xtrue.exit_status == 0,
	"xtrue.exit_status != 0", xtrue.exit_status != 0,

	"xtrue.exit_status == 1", xtrue.exit_status == 1,
	"xtrue.exit_status != 1", xtrue.exit_status != 1,

	"a == a", "a" == "a",
	"a != a", "a" != "a",

	"'a' == 'b'", "a" == "b",
	"'a' != 'b'", "a" != "b",

	"$0 == $1", $0 == $1,
	"$0 != $1", $0 != $1,

	"$1 == $0", $1 == $0,
	"$1 != $0", $1 != $0,

	"$1 == '1'", $1 == "1",
	"'1' == $1", "1" == $1,

	"$1 == '10'", $1 == "10",
	"'10' == $1", "10" == $1
);

exec echo_line("$0", $0)
  when
  	xtrue.exit_status == 0
;

exec echo_dollar1("$1", $1)
  when
  	xtrue.exit_status == 0
;

exec echo_10($1)
  when
  	not (
		$1 == "10"
		and
		$1 != "100"
	) == false
;

exec echo_100($1)
  when
  	$1 == "100"
;

exec echo_line_exit(echo_line.exit_status, "echo line: $1", $1);
