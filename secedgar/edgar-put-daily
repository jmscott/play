#!/bin/bash
#
#  Synopsis:
#	Do blob-put-file of daily edgar zip, plus meta job json.
#  Usage:
#	edgar-put-daily spool/20210129.nc.tar.gz
#  Exit Status:
#	0	ok, spool file put
#	1	failure
#  Note:
#	Requires script $BLOBIO_ROOT/bin/bio-put-file.
#

PROG=$(basename $0)
TMP_JSON=${TMPDIR:=/tmp}/$PROG.$$

now()
{
	date +'%Y/%m/%d %H:%M:%S'
}

log()
{
	echo "$(now): $PROG: $@"
}

fault()
{
	FAULT=$SECEDGAR_ROOT/run/$PROG.fault
	echo "$(now): ERROR: $@" >>$FAULT
}

leave()
{
	rm -f $TMP_JSON || fault "rm tmp failed: exit status=$?: $TMP_JSON"
	log 'good bye, cruel world'
}

die()
{
	fault $@
	log "ERROR: $@" >&2
	exit 1
}

log 'hello, world'
trap 'leave' EXIT TERM INT

test $# = 1 || die "wrong number of arguments: got $#, expected 1"
DAILY=$1
log "daily file: $DAILY"
log "BLOBIO_SERVICE=$BLOBIO_SERVICE"
log "BLOBIO_ALGORITHM=$BLOBIO_ALGORITHM"

log "SECEDGAR_ROOT=$SECEDGAR_ROOT"
test -n "$SECEDGAR_ROOT" || die 'env not defined: SECEDGAR_ROOT'
test -d $SECEDGAR_ROOT || die "no directory: $SECEDGAR_ROOT"

log "PATH=$PATH"
log "daily zip: $DAILY"
log "daily size: $(du -h $DAILY | cut -f1)"

log "bio-put-file daily: ... $DAILY"
log "tmp put json: $TMP_JSON"
bio-put-file $DAILY >$TMP_JSON || die "bio-put-file failed: exit status=$?"

ZIP_BLOB=$(grep '^	[@>][a-z]' $TMP_JSON)
test $? = 0 || die "grep zip blob json failed: exit status=$?"
ZIP_BLOB=$(echo "$ZIP_BLOB" | cut -c3-)
log "zip daily blob: $ZIP_BLOB"

PUT_JSON_BLOB=$(grep '^	>>[a-z]' $TMP_JSON)
test $? = 0 || die "grep json blob failed: exit status=$?"
PUT_JSON_BLOB=$(echo "$PUT_JSON_BLOB" | cut -c4-)
log "json put blob: $PUT_JSON_BLOB"

#  paranoid check of correctness of udig
blobio eat --udig $PUT_JSON_BLOB --service $BLOBIO_SERVICE
STATUS=$?
case $STATUS in
0)
	;;
1)
	die "blob put json dies not exist in service: $BLOBIO_SERVICE"
	;;
*)
	die "blobio eat failed: exit status=$?" 
	;;
esac

#  make summary blob tiing the whole job together.

cat >$TMP_JSON <<END
{
	"secedgar.play.jmscott.github.com": {
		"command-line" : {
			"command": "$PROG",
			"zip-path": "$(echo -n $DAILY | escape-json-string)",
			"json-put-blob": "$PUT_JSON_BLOB",
			"zip-blob": "$ZIP_BLOB",
			"now": "$(RFC3339Nano)"
		}
	}
}
END
JOB_JSON=$BLOBIO_ALGORITHM:$(
	blobio eat --algorithm $BLOBIO_ALGORITHM --input-path $TMP_JSON
) || die "blobio eat job json failed: exit status=$?"
log "job json blob: $JOB_JSON"
blobio put								\
	--udig $JOB_JSON						\
	--input-path $TMP_JSON						\
	--service $BLOBIO_SERVICE					||
  die "blobio put job json failed: exit status=$?"

TXN="data/$PROG.txn"
log "job json transaction: $TXN"
echo "$(RFC3339Nano)	$JOB_JSON" >>$TXN				||
		die "echo job >txn failed: exit status=$?"
exit 0
